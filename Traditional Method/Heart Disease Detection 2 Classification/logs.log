2024-05-07 16:28:54,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 16:28:54,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 16:28:54,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 16:28:54,210:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 17:18:27,584:INFO:PyCaret ClassificationExperiment
2024-05-07 17:18:27,584:INFO:Logging name: Heart_Disease_Detection_E1
2024-05-07 17:18:27,584:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-07 17:18:27,584:INFO:version 3.1.0
2024-05-07 17:18:27,584:INFO:Initializing setup()
2024-05-07 17:18:27,584:INFO:self.USI: 7ac2
2024-05-07 17:18:27,584:INFO:self._variable_keys: {'USI', 'logging_param', 'n_jobs_param', 'X_train', 'X', 'target_param', 'y_train', 'gpu_n_jobs_param', '_ml_usecase', 'seed', 'X_test', 'fold_groups_param', 'fix_imbalance', 'fold_shuffle_param', 'y_test', 'data', '_available_plots', 'fold_generator', 'gpu_param', 'memory', 'exp_name_log', 'is_multiclass', 'y', 'pipeline', 'log_plots_param', 'exp_id', 'idx', 'html_param'}
2024-05-07 17:18:27,584:INFO:Checking environment
2024-05-07 17:18:27,584:INFO:python_version: 3.10.11
2024-05-07 17:18:27,584:INFO:python_build: ('main', 'May 17 2023 14:30:36')
2024-05-07 17:18:27,584:INFO:machine: arm64
2024-05-07 17:18:27,584:INFO:platform: macOS-14.4.1-arm64-arm-64bit
2024-05-07 17:18:27,584:INFO:Memory: svmem(total=17179869184, available=4770086912, percent=72.2, used=7586807808, free=133595136, active=4643831808, inactive=4631494656, wired=2942976000)
2024-05-07 17:18:27,584:INFO:Physical Core: 10
2024-05-07 17:18:27,584:INFO:Logical Core: 10
2024-05-07 17:18:27,585:INFO:Checking libraries
2024-05-07 17:18:27,585:INFO:System:
2024-05-07 17:18:27,585:INFO:    python: 3.10.11 (main, May 17 2023, 14:30:36) [Clang 14.0.6 ]
2024-05-07 17:18:27,585:INFO:executable: /Users/achbj/opt/miniconda3/envs/nn/bin/python
2024-05-07 17:18:27,585:INFO:   machine: macOS-14.4.1-arm64-arm-64bit
2024-05-07 17:18:27,585:INFO:PyCaret required dependencies:
2024-05-07 17:18:28,341:INFO:                 pip: 23.1.2
2024-05-07 17:18:28,341:INFO:          setuptools: 68.2.2
2024-05-07 17:18:28,341:INFO:             pycaret: 3.1.0
2024-05-07 17:18:28,341:INFO:             IPython: 8.20.0
2024-05-07 17:18:28,341:INFO:          ipywidgets: 8.1.2
2024-05-07 17:18:28,341:INFO:                tqdm: 4.65.0
2024-05-07 17:18:28,341:INFO:               numpy: 1.23.5
2024-05-07 17:18:28,341:INFO:              pandas: 1.5.3
2024-05-07 17:18:28,341:INFO:              jinja2: 3.1.3
2024-05-07 17:18:28,341:INFO:               scipy: 1.10.1
2024-05-07 17:18:28,341:INFO:              joblib: 1.2.0
2024-05-07 17:18:28,341:INFO:             sklearn: 1.2.2
2024-05-07 17:18:28,341:INFO:                pyod: 1.1.0
2024-05-07 17:18:28,341:INFO:            imblearn: 0.11.0
2024-05-07 17:18:28,341:INFO:   category_encoders: 2.6.2
2024-05-07 17:18:28,341:INFO:            lightgbm: 4.1.0
2024-05-07 17:18:28,341:INFO:               numba: 0.58.0
2024-05-07 17:18:28,341:INFO:            requests: 2.31.0
2024-05-07 17:18:28,341:INFO:          matplotlib: 3.8.2
2024-05-07 17:18:28,341:INFO:          scikitplot: 0.3.7
2024-05-07 17:18:28,341:INFO:         yellowbrick: 1.5
2024-05-07 17:18:28,341:INFO:              plotly: 5.15.0
2024-05-07 17:18:28,341:INFO:    plotly-resampler: Not installed
2024-05-07 17:18:28,341:INFO:             kaleido: 0.2.1
2024-05-07 17:18:28,341:INFO:           schemdraw: 0.15
2024-05-07 17:18:28,341:INFO:         statsmodels: 0.13.5
2024-05-07 17:18:28,341:INFO:              sktime: 0.21.1
2024-05-07 17:18:28,341:INFO:               tbats: 1.1.3
2024-05-07 17:18:28,341:INFO:            pmdarima: 2.0.3
2024-05-07 17:18:28,341:INFO:              psutil: 5.9.0
2024-05-07 17:18:28,341:INFO:          markupsafe: 2.1.3
2024-05-07 17:18:28,341:INFO:             pickle5: Not installed
2024-05-07 17:18:28,341:INFO:         cloudpickle: 2.2.1
2024-05-07 17:18:28,341:INFO:         deprecation: 2.1.0
2024-05-07 17:18:28,341:INFO:              xxhash: 3.4.1
2024-05-07 17:18:28,341:INFO:           wurlitzer: 3.0.3
2024-05-07 17:18:28,341:INFO:PyCaret optional dependencies:
2024-05-07 17:18:29,059:INFO:                shap: 0.45.0
2024-05-07 17:18:29,059:INFO:           interpret: 0.6.0
2024-05-07 17:18:29,059:INFO:                umap: 0.5.5
2024-05-07 17:18:29,059:INFO:     ydata_profiling: 4.6.0
2024-05-07 17:18:29,059:INFO:  explainerdashboard: 0.4.7
2024-05-07 17:18:29,059:INFO:             autoviz: Not installed
2024-05-07 17:18:29,059:INFO:           fairlearn: 0.7.0
2024-05-07 17:18:29,060:INFO:          deepchecks: Not installed
2024-05-07 17:18:29,060:INFO:             xgboost: 1.7.3
2024-05-07 17:18:29,060:INFO:            catboost: 1.1.1
2024-05-07 17:18:29,060:INFO:              kmodes: 0.12.2
2024-05-07 17:18:29,060:INFO:             mlxtend: 0.23.0
2024-05-07 17:18:29,060:INFO:       statsforecast: 1.5.0
2024-05-07 17:18:29,060:INFO:        tune_sklearn: 0.5.0
2024-05-07 17:18:29,060:INFO:                 ray: 2.10.0
2024-05-07 17:18:29,060:INFO:            hyperopt: 0.2.7
2024-05-07 17:18:29,060:INFO:              optuna: 3.2.0
2024-05-07 17:18:29,060:INFO:               skopt: 0.10.1
2024-05-07 17:18:29,060:INFO:              mlflow: 2.11.3
2024-05-07 17:18:29,060:INFO:              gradio: 3.36.1
2024-05-07 17:18:29,060:INFO:             fastapi: 0.100.0
2024-05-07 17:18:29,060:INFO:             uvicorn: 0.22.0
2024-05-07 17:18:29,060:INFO:              m2cgen: 0.10.0
2024-05-07 17:18:29,060:INFO:           evidently: 0.2.8
2024-05-07 17:18:29,060:INFO:               fugue: 0.8.6
2024-05-07 17:18:29,060:INFO:           streamlit: Not installed
2024-05-07 17:18:29,060:INFO:             prophet: Not installed
2024-05-07 17:18:29,060:INFO:None
2024-05-07 17:18:29,060:INFO:Set up data.
2024-05-07 17:18:29,063:INFO:Set up folding strategy.
2024-05-07 17:18:29,063:INFO:Set up train/test split.
2024-05-07 17:18:29,065:INFO:Set up index.
2024-05-07 17:18:29,065:INFO:Assigning column types.
2024-05-07 17:18:29,066:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-07 17:18:29,085:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-07 17:18:29,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-07 17:18:29,105:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:29,223:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,022:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-07 17:18:30,023:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-07 17:18:30,040:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:30,042:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,042:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-07 17:18:30,063:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-07 17:18:30,078:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:30,079:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-07 17:18:30,109:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:30,111:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,111:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-07 17:18:30,141:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:30,142:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,173:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:30,174:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,176:INFO:Preparing preprocessing pipeline...
2024-05-07 17:18:30,176:INFO:Set up simple imputation.
2024-05-07 17:18:30,184:INFO:Finished creating preprocessing pipeline.
2024-05-07 17:18:30,187:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-05-07 17:18:30,187:INFO:Creating final display dataframe.
2024-05-07 17:18:30,210:INFO:Setup _display_container:                     Description                       Value
0                    Session id                        3548
1                        Target                      target
2                   Target type                      Binary
3           Original data shape                  (1025, 14)
4        Transformed data shape                  (1025, 14)
5   Transformed train set shape                   (717, 14)
6    Transformed test set shape                   (308, 14)
7              Numeric features                          13
8                    Preprocess                        True
9               Imputation type                      simple
10           Numeric imputation                        mean
11       Categorical imputation                        mode
12               Fold Generator             StratifiedKFold
13                  Fold Number                          10
14                     CPU Jobs                          -1
15                      Use GPU                       False
16               Log Experiment                MlflowLogger
17              Experiment Name  Heart_Disease_Detection_E1
18                          USI                        7ac2
2024-05-07 17:18:30,245:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:30,246:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,280:INFO:Soft dependency imported: xgboost: 1.7.3
2024-05-07 17:18:30,281:INFO:Soft dependency imported: catboost: 1.1.1
2024-05-07 17:18:30,282:INFO:Logging experiment in loggers
2024-05-07 17:18:30,365:INFO:SubProcess save_model() called ==================================
2024-05-07 17:18:30,368:INFO:Initializing save_model()
2024-05-07 17:18:30,368:INFO:save_model(model=Pipeline(memory=FastMemory(location=/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), model_name=/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/tmpsj9l7y1m/Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-07 17:18:30,368:INFO:Adding model into prep_pipe
2024-05-07 17:18:30,368:WARNING:Only Model saved as it was a pipeline.
2024-05-07 17:18:30,370:INFO:/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/tmpsj9l7y1m/Transformation Pipeline.pkl saved in current working directory
2024-05-07 17:18:30,371:INFO:Pipeline(memory=FastMemory(location=/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2024-05-07 17:18:30,371:INFO:save_model() successfully completed......................................
2024-05-07 17:18:30,554:INFO:SubProcess save_model() end ==================================
2024-05-07 17:18:30,559:INFO:setup() successfully completed in 2.7s...............
2024-05-07 17:18:30,559:INFO:Initializing compare_models()
2024-05-07 17:18:30,559:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-05-07 17:18:30,559:INFO:Checking exceptions
2024-05-07 17:18:30,560:INFO:Preparing display monitor
2024-05-07 17:18:30,600:INFO:Initializing Logistic Regression
2024-05-07 17:18:30,600:INFO:Total runtime is 4.450480143229167e-06 minutes
2024-05-07 17:18:30,618:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:30,619:INFO:Initializing create_model()
2024-05-07 17:18:30,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:30,619:INFO:Checking exceptions
2024-05-07 17:18:30,619:INFO:Importing libraries
2024-05-07 17:18:30,619:INFO:Copying training dataset
2024-05-07 17:18:30,628:INFO:Defining folds
2024-05-07 17:18:30,628:INFO:Declaring metric variables
2024-05-07 17:18:30,630:INFO:Importing untrained model
2024-05-07 17:18:30,632:INFO:Logistic Regression Imported successfully
2024-05-07 17:18:30,635:INFO:Starting cross validation
2024-05-07 17:18:30,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:33,627:INFO:Calculating mean and std
2024-05-07 17:18:33,631:INFO:Creating metrics dataframe
2024-05-07 17:18:33,637:INFO:Uploading results into container
2024-05-07 17:18:33,637:INFO:Uploading model into container now
2024-05-07 17:18:33,639:INFO:_master_model_container: 1
2024-05-07 17:18:33,639:INFO:_display_container: 2
2024-05-07 17:18:33,640:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3548, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-05-07 17:18:33,640:INFO:create_model() successfully completed......................................
2024-05-07 17:18:33,822:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:33,822:INFO:Creating metrics dataframe
2024-05-07 17:18:33,826:INFO:Initializing K Neighbors Classifier
2024-05-07 17:18:33,826:INFO:Total runtime is 0.053771384557088214 minutes
2024-05-07 17:18:33,827:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:33,828:INFO:Initializing create_model()
2024-05-07 17:18:33,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:33,828:INFO:Checking exceptions
2024-05-07 17:18:33,828:INFO:Importing libraries
2024-05-07 17:18:33,828:INFO:Copying training dataset
2024-05-07 17:18:33,830:INFO:Defining folds
2024-05-07 17:18:33,830:INFO:Declaring metric variables
2024-05-07 17:18:33,831:INFO:Importing untrained model
2024-05-07 17:18:33,833:INFO:K Neighbors Classifier Imported successfully
2024-05-07 17:18:33,836:INFO:Starting cross validation
2024-05-07 17:18:33,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:33,893:INFO:Calculating mean and std
2024-05-07 17:18:33,894:INFO:Creating metrics dataframe
2024-05-07 17:18:33,895:INFO:Uploading results into container
2024-05-07 17:18:33,895:INFO:Uploading model into container now
2024-05-07 17:18:33,895:INFO:_master_model_container: 2
2024-05-07 17:18:33,895:INFO:_display_container: 2
2024-05-07 17:18:33,896:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-05-07 17:18:33,896:INFO:create_model() successfully completed......................................
2024-05-07 17:18:34,054:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:34,054:INFO:Creating metrics dataframe
2024-05-07 17:18:34,058:INFO:Initializing Naive Bayes
2024-05-07 17:18:34,058:INFO:Total runtime is 0.057646052042643225 minutes
2024-05-07 17:18:34,060:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:34,060:INFO:Initializing create_model()
2024-05-07 17:18:34,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:34,060:INFO:Checking exceptions
2024-05-07 17:18:34,060:INFO:Importing libraries
2024-05-07 17:18:34,060:INFO:Copying training dataset
2024-05-07 17:18:34,062:INFO:Defining folds
2024-05-07 17:18:34,063:INFO:Declaring metric variables
2024-05-07 17:18:34,064:INFO:Importing untrained model
2024-05-07 17:18:34,066:INFO:Naive Bayes Imported successfully
2024-05-07 17:18:34,070:INFO:Starting cross validation
2024-05-07 17:18:34,070:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:34,104:INFO:Calculating mean and std
2024-05-07 17:18:34,104:INFO:Creating metrics dataframe
2024-05-07 17:18:34,106:INFO:Uploading results into container
2024-05-07 17:18:34,106:INFO:Uploading model into container now
2024-05-07 17:18:34,107:INFO:_master_model_container: 3
2024-05-07 17:18:34,107:INFO:_display_container: 2
2024-05-07 17:18:34,107:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-05-07 17:18:34,107:INFO:create_model() successfully completed......................................
2024-05-07 17:18:34,278:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:34,278:INFO:Creating metrics dataframe
2024-05-07 17:18:34,283:INFO:Initializing Decision Tree Classifier
2024-05-07 17:18:34,283:INFO:Total runtime is 0.061386585235595696 minutes
2024-05-07 17:18:34,284:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:34,285:INFO:Initializing create_model()
2024-05-07 17:18:34,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:34,285:INFO:Checking exceptions
2024-05-07 17:18:34,285:INFO:Importing libraries
2024-05-07 17:18:34,285:INFO:Copying training dataset
2024-05-07 17:18:34,287:INFO:Defining folds
2024-05-07 17:18:34,287:INFO:Declaring metric variables
2024-05-07 17:18:34,289:INFO:Importing untrained model
2024-05-07 17:18:34,291:INFO:Decision Tree Classifier Imported successfully
2024-05-07 17:18:34,294:INFO:Starting cross validation
2024-05-07 17:18:34,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:34,325:INFO:Calculating mean and std
2024-05-07 17:18:34,325:INFO:Creating metrics dataframe
2024-05-07 17:18:34,327:INFO:Uploading results into container
2024-05-07 17:18:34,327:INFO:Uploading model into container now
2024-05-07 17:18:34,327:INFO:_master_model_container: 4
2024-05-07 17:18:34,327:INFO:_display_container: 2
2024-05-07 17:18:34,327:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3548, splitter='best')
2024-05-07 17:18:34,327:INFO:create_model() successfully completed......................................
2024-05-07 17:18:34,494:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:34,494:INFO:Creating metrics dataframe
2024-05-07 17:18:34,499:INFO:Initializing SVM - Linear Kernel
2024-05-07 17:18:34,499:INFO:Total runtime is 0.06498730182647705 minutes
2024-05-07 17:18:34,500:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:34,500:INFO:Initializing create_model()
2024-05-07 17:18:34,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:34,501:INFO:Checking exceptions
2024-05-07 17:18:34,501:INFO:Importing libraries
2024-05-07 17:18:34,501:INFO:Copying training dataset
2024-05-07 17:18:34,503:INFO:Defining folds
2024-05-07 17:18:34,503:INFO:Declaring metric variables
2024-05-07 17:18:34,505:INFO:Importing untrained model
2024-05-07 17:18:34,506:INFO:SVM - Linear Kernel Imported successfully
2024-05-07 17:18:34,510:INFO:Starting cross validation
2024-05-07 17:18:34,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:34,528:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,528:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,531:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,532:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,534:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,535:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,540:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,541:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,541:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,541:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,544:INFO:Calculating mean and std
2024-05-07 17:18:34,544:INFO:Creating metrics dataframe
2024-05-07 17:18:34,546:INFO:Uploading results into container
2024-05-07 17:18:34,546:INFO:Uploading model into container now
2024-05-07 17:18:34,546:INFO:_master_model_container: 5
2024-05-07 17:18:34,546:INFO:_display_container: 2
2024-05-07 17:18:34,546:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3548, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-05-07 17:18:34,546:INFO:create_model() successfully completed......................................
2024-05-07 17:18:34,707:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:34,707:INFO:Creating metrics dataframe
2024-05-07 17:18:34,711:INFO:Initializing Ridge Classifier
2024-05-07 17:18:34,711:INFO:Total runtime is 0.0685296336809794 minutes
2024-05-07 17:18:34,712:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:34,713:INFO:Initializing create_model()
2024-05-07 17:18:34,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:34,713:INFO:Checking exceptions
2024-05-07 17:18:34,713:INFO:Importing libraries
2024-05-07 17:18:34,713:INFO:Copying training dataset
2024-05-07 17:18:34,714:INFO:Defining folds
2024-05-07 17:18:34,714:INFO:Declaring metric variables
2024-05-07 17:18:34,716:INFO:Importing untrained model
2024-05-07 17:18:34,717:INFO:Ridge Classifier Imported successfully
2024-05-07 17:18:34,719:INFO:Starting cross validation
2024-05-07 17:18:34,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:34,733:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,743:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,743:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,747:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,747:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,749:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,750:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,752:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,753:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,755:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 182, in _score
    return super()._score(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'. Did you mean: '_predict_proba_lr'?

  warnings.warn(

2024-05-07 17:18:34,758:INFO:Calculating mean and std
2024-05-07 17:18:34,758:INFO:Creating metrics dataframe
2024-05-07 17:18:34,759:INFO:Uploading results into container
2024-05-07 17:18:34,760:INFO:Uploading model into container now
2024-05-07 17:18:34,760:INFO:_master_model_container: 6
2024-05-07 17:18:34,760:INFO:_display_container: 2
2024-05-07 17:18:34,760:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3548, solver='auto',
                tol=0.0001)
2024-05-07 17:18:34,760:INFO:create_model() successfully completed......................................
2024-05-07 17:18:34,915:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:34,915:INFO:Creating metrics dataframe
2024-05-07 17:18:34,920:INFO:Initializing Random Forest Classifier
2024-05-07 17:18:34,920:INFO:Total runtime is 0.07200523614883422 minutes
2024-05-07 17:18:34,921:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:34,921:INFO:Initializing create_model()
2024-05-07 17:18:34,921:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:34,921:INFO:Checking exceptions
2024-05-07 17:18:34,921:INFO:Importing libraries
2024-05-07 17:18:34,921:INFO:Copying training dataset
2024-05-07 17:18:34,923:INFO:Defining folds
2024-05-07 17:18:34,924:INFO:Declaring metric variables
2024-05-07 17:18:34,925:INFO:Importing untrained model
2024-05-07 17:18:34,926:INFO:Random Forest Classifier Imported successfully
2024-05-07 17:18:34,929:INFO:Starting cross validation
2024-05-07 17:18:34,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:35,110:INFO:Calculating mean and std
2024-05-07 17:18:35,110:INFO:Creating metrics dataframe
2024-05-07 17:18:35,112:INFO:Uploading results into container
2024-05-07 17:18:35,112:INFO:Uploading model into container now
2024-05-07 17:18:35,112:INFO:_master_model_container: 7
2024-05-07 17:18:35,112:INFO:_display_container: 2
2024-05-07 17:18:35,113:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3548, verbose=0, warm_start=False)
2024-05-07 17:18:35,113:INFO:create_model() successfully completed......................................
2024-05-07 17:18:35,270:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:35,270:INFO:Creating metrics dataframe
2024-05-07 17:18:35,275:INFO:Initializing Quadratic Discriminant Analysis
2024-05-07 17:18:35,275:INFO:Total runtime is 0.07791808446248372 minutes
2024-05-07 17:18:35,276:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:35,276:INFO:Initializing create_model()
2024-05-07 17:18:35,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:35,276:INFO:Checking exceptions
2024-05-07 17:18:35,276:INFO:Importing libraries
2024-05-07 17:18:35,276:INFO:Copying training dataset
2024-05-07 17:18:35,278:INFO:Defining folds
2024-05-07 17:18:35,278:INFO:Declaring metric variables
2024-05-07 17:18:35,279:INFO:Importing untrained model
2024-05-07 17:18:35,281:INFO:Quadratic Discriminant Analysis Imported successfully
2024-05-07 17:18:35,283:INFO:Starting cross validation
2024-05-07 17:18:35,284:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:35,319:INFO:Calculating mean and std
2024-05-07 17:18:35,319:INFO:Creating metrics dataframe
2024-05-07 17:18:35,321:INFO:Uploading results into container
2024-05-07 17:18:35,321:INFO:Uploading model into container now
2024-05-07 17:18:35,321:INFO:_master_model_container: 8
2024-05-07 17:18:35,321:INFO:_display_container: 2
2024-05-07 17:18:35,321:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-05-07 17:18:35,321:INFO:create_model() successfully completed......................................
2024-05-07 17:18:35,474:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:35,474:INFO:Creating metrics dataframe
2024-05-07 17:18:35,479:INFO:Initializing Ada Boost Classifier
2024-05-07 17:18:35,479:INFO:Total runtime is 0.08132455348968505 minutes
2024-05-07 17:18:35,480:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:35,480:INFO:Initializing create_model()
2024-05-07 17:18:35,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:35,480:INFO:Checking exceptions
2024-05-07 17:18:35,480:INFO:Importing libraries
2024-05-07 17:18:35,480:INFO:Copying training dataset
2024-05-07 17:18:35,482:INFO:Defining folds
2024-05-07 17:18:35,483:INFO:Declaring metric variables
2024-05-07 17:18:35,484:INFO:Importing untrained model
2024-05-07 17:18:35,485:INFO:Ada Boost Classifier Imported successfully
2024-05-07 17:18:35,487:INFO:Starting cross validation
2024-05-07 17:18:35,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:35,583:INFO:Calculating mean and std
2024-05-07 17:18:35,583:INFO:Creating metrics dataframe
2024-05-07 17:18:35,585:INFO:Uploading results into container
2024-05-07 17:18:35,585:INFO:Uploading model into container now
2024-05-07 17:18:35,585:INFO:_master_model_container: 9
2024-05-07 17:18:35,585:INFO:_display_container: 2
2024-05-07 17:18:35,585:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3548)
2024-05-07 17:18:35,585:INFO:create_model() successfully completed......................................
2024-05-07 17:18:35,737:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:35,737:INFO:Creating metrics dataframe
2024-05-07 17:18:35,742:INFO:Initializing Gradient Boosting Classifier
2024-05-07 17:18:35,742:INFO:Total runtime is 0.08570414781570433 minutes
2024-05-07 17:18:35,743:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:35,743:INFO:Initializing create_model()
2024-05-07 17:18:35,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:35,743:INFO:Checking exceptions
2024-05-07 17:18:35,743:INFO:Importing libraries
2024-05-07 17:18:35,743:INFO:Copying training dataset
2024-05-07 17:18:35,745:INFO:Defining folds
2024-05-07 17:18:35,745:INFO:Declaring metric variables
2024-05-07 17:18:35,746:INFO:Importing untrained model
2024-05-07 17:18:35,748:INFO:Gradient Boosting Classifier Imported successfully
2024-05-07 17:18:35,766:INFO:Starting cross validation
2024-05-07 17:18:35,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:35,897:INFO:Calculating mean and std
2024-05-07 17:18:35,898:INFO:Creating metrics dataframe
2024-05-07 17:18:35,900:INFO:Uploading results into container
2024-05-07 17:18:35,900:INFO:Uploading model into container now
2024-05-07 17:18:35,900:INFO:_master_model_container: 10
2024-05-07 17:18:35,900:INFO:_display_container: 2
2024-05-07 17:18:35,900:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3548, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-05-07 17:18:35,900:INFO:create_model() successfully completed......................................
2024-05-07 17:18:36,056:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:36,056:INFO:Creating metrics dataframe
2024-05-07 17:18:36,061:INFO:Initializing Linear Discriminant Analysis
2024-05-07 17:18:36,061:INFO:Total runtime is 0.09102113246917723 minutes
2024-05-07 17:18:36,062:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:36,062:INFO:Initializing create_model()
2024-05-07 17:18:36,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:36,062:INFO:Checking exceptions
2024-05-07 17:18:36,062:INFO:Importing libraries
2024-05-07 17:18:36,062:INFO:Copying training dataset
2024-05-07 17:18:36,064:INFO:Defining folds
2024-05-07 17:18:36,064:INFO:Declaring metric variables
2024-05-07 17:18:36,065:INFO:Importing untrained model
2024-05-07 17:18:36,067:INFO:Linear Discriminant Analysis Imported successfully
2024-05-07 17:18:36,069:INFO:Starting cross validation
2024-05-07 17:18:36,070:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:36,100:INFO:Calculating mean and std
2024-05-07 17:18:36,100:INFO:Creating metrics dataframe
2024-05-07 17:18:36,101:INFO:Uploading results into container
2024-05-07 17:18:36,101:INFO:Uploading model into container now
2024-05-07 17:18:36,102:INFO:_master_model_container: 11
2024-05-07 17:18:36,102:INFO:_display_container: 2
2024-05-07 17:18:36,102:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-05-07 17:18:36,102:INFO:create_model() successfully completed......................................
2024-05-07 17:18:36,257:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:36,257:INFO:Creating metrics dataframe
2024-05-07 17:18:36,262:INFO:Initializing Extra Trees Classifier
2024-05-07 17:18:36,262:INFO:Total runtime is 0.09437188307444253 minutes
2024-05-07 17:18:36,263:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:36,263:INFO:Initializing create_model()
2024-05-07 17:18:36,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:36,263:INFO:Checking exceptions
2024-05-07 17:18:36,263:INFO:Importing libraries
2024-05-07 17:18:36,263:INFO:Copying training dataset
2024-05-07 17:18:36,265:INFO:Defining folds
2024-05-07 17:18:36,265:INFO:Declaring metric variables
2024-05-07 17:18:36,266:INFO:Importing untrained model
2024-05-07 17:18:36,268:INFO:Extra Trees Classifier Imported successfully
2024-05-07 17:18:36,270:INFO:Starting cross validation
2024-05-07 17:18:36,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:36,434:INFO:Calculating mean and std
2024-05-07 17:18:36,435:INFO:Creating metrics dataframe
2024-05-07 17:18:36,436:INFO:Uploading results into container
2024-05-07 17:18:36,436:INFO:Uploading model into container now
2024-05-07 17:18:36,437:INFO:_master_model_container: 12
2024-05-07 17:18:36,437:INFO:_display_container: 2
2024-05-07 17:18:36,437:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False)
2024-05-07 17:18:36,437:INFO:create_model() successfully completed......................................
2024-05-07 17:18:36,589:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:36,589:INFO:Creating metrics dataframe
2024-05-07 17:18:36,594:INFO:Initializing Extreme Gradient Boosting
2024-05-07 17:18:36,594:INFO:Total runtime is 0.09990803400675453 minutes
2024-05-07 17:18:36,595:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:36,595:INFO:Initializing create_model()
2024-05-07 17:18:36,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:36,595:INFO:Checking exceptions
2024-05-07 17:18:36,596:INFO:Importing libraries
2024-05-07 17:18:36,596:INFO:Copying training dataset
2024-05-07 17:18:36,597:INFO:Defining folds
2024-05-07 17:18:36,598:INFO:Declaring metric variables
2024-05-07 17:18:36,599:INFO:Importing untrained model
2024-05-07 17:18:36,600:INFO:Extreme Gradient Boosting Imported successfully
2024-05-07 17:18:36,603:INFO:Starting cross validation
2024-05-07 17:18:36,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:36,703:INFO:Calculating mean and std
2024-05-07 17:18:36,703:INFO:Creating metrics dataframe
2024-05-07 17:18:36,705:INFO:Uploading results into container
2024-05-07 17:18:36,705:INFO:Uploading model into container now
2024-05-07 17:18:36,705:INFO:_master_model_container: 13
2024-05-07 17:18:36,705:INFO:_display_container: 2
2024-05-07 17:18:36,706:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2024-05-07 17:18:36,706:INFO:create_model() successfully completed......................................
2024-05-07 17:18:36,866:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:36,866:INFO:Creating metrics dataframe
2024-05-07 17:18:36,871:INFO:Initializing Light Gradient Boosting Machine
2024-05-07 17:18:36,871:INFO:Total runtime is 0.10452433427174884 minutes
2024-05-07 17:18:36,872:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:36,872:INFO:Initializing create_model()
2024-05-07 17:18:36,872:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:36,872:INFO:Checking exceptions
2024-05-07 17:18:36,872:INFO:Importing libraries
2024-05-07 17:18:36,872:INFO:Copying training dataset
2024-05-07 17:18:36,874:INFO:Defining folds
2024-05-07 17:18:36,874:INFO:Declaring metric variables
2024-05-07 17:18:36,876:INFO:Importing untrained model
2024-05-07 17:18:36,877:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-07 17:18:36,879:INFO:Starting cross validation
2024-05-07 17:18:36,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:37,745:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-05-07 17:18:37,750:WARNING:Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 796, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1527, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1121, in _create_model_with_cv
    scores = cross_validate(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/concurrent/futures/_base.py", line 458, in result
    return self.__get_result()
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/concurrent/futures/_base.py", line 403, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGSEGV(-11)}

2024-05-07 17:18:37,750:INFO:Initializing create_model()
2024-05-07 17:18:37,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:37,750:INFO:Checking exceptions
2024-05-07 17:18:37,750:INFO:Importing libraries
2024-05-07 17:18:37,750:INFO:Copying training dataset
2024-05-07 17:18:37,752:INFO:Defining folds
2024-05-07 17:18:37,752:INFO:Declaring metric variables
2024-05-07 17:18:37,754:INFO:Importing untrained model
2024-05-07 17:18:37,755:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-07 17:18:37,758:INFO:Starting cross validation
2024-05-07 17:18:37,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:40,173:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2024-05-07 17:18:40,174:ERROR:Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 796, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1527, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1121, in _create_model_with_cv
    scores = cross_validate(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/concurrent/futures/_base.py", line 458, in result
    return self.__get_result()
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/concurrent/futures/_base.py", line 403, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGSEGV(-11)}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 812, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1527, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py", line 1121, in _create_model_with_cv
    scores = cross_validate(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/model_selection/_validation.py", line 266, in cross_validate
    results = parallel(
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/concurrent/futures/_base.py", line 458, in result
    return self.__get_result()
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/concurrent/futures/_base.py", line 403, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGSEGV(-11)}

2024-05-07 17:18:40,174:INFO:Initializing CatBoost Classifier
2024-05-07 17:18:40,174:INFO:Total runtime is 0.15956981976826984 minutes
2024-05-07 17:18:40,177:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:40,177:INFO:Initializing create_model()
2024-05-07 17:18:40,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:40,177:INFO:Checking exceptions
2024-05-07 17:18:40,177:INFO:Importing libraries
2024-05-07 17:18:40,177:INFO:Copying training dataset
2024-05-07 17:18:40,180:INFO:Defining folds
2024-05-07 17:18:40,180:INFO:Declaring metric variables
2024-05-07 17:18:40,182:INFO:Importing untrained model
2024-05-07 17:18:40,184:INFO:CatBoost Classifier Imported successfully
2024-05-07 17:18:40,187:INFO:Starting cross validation
2024-05-07 17:18:40,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:43,358:INFO:Calculating mean and std
2024-05-07 17:18:43,361:INFO:Creating metrics dataframe
2024-05-07 17:18:43,365:INFO:Uploading results into container
2024-05-07 17:18:43,366:INFO:Uploading model into container now
2024-05-07 17:18:43,366:INFO:_master_model_container: 14
2024-05-07 17:18:43,366:INFO:_display_container: 2
2024-05-07 17:18:43,366:INFO:<catboost.core.CatBoostClassifier object at 0x30a0f2710>
2024-05-07 17:18:43,366:INFO:create_model() successfully completed......................................
2024-05-07 17:18:43,541:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:43,541:INFO:Creating metrics dataframe
2024-05-07 17:18:43,547:INFO:Initializing Dummy Classifier
2024-05-07 17:18:43,547:INFO:Total runtime is 0.21578414837519327 minutes
2024-05-07 17:18:43,548:INFO:SubProcess create_model() called ==================================
2024-05-07 17:18:43,548:INFO:Initializing create_model()
2024-05-07 17:18:43,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3092a7bb0>, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:43,548:INFO:Checking exceptions
2024-05-07 17:18:43,548:INFO:Importing libraries
2024-05-07 17:18:43,548:INFO:Copying training dataset
2024-05-07 17:18:43,550:INFO:Defining folds
2024-05-07 17:18:43,550:INFO:Declaring metric variables
2024-05-07 17:18:43,551:INFO:Importing untrained model
2024-05-07 17:18:43,552:INFO:Dummy Classifier Imported successfully
2024-05-07 17:18:43,555:INFO:Starting cross validation
2024-05-07 17:18:43,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-07 17:18:43,605:INFO:Calculating mean and std
2024-05-07 17:18:43,605:INFO:Creating metrics dataframe
2024-05-07 17:18:43,606:INFO:Uploading results into container
2024-05-07 17:18:43,606:INFO:Uploading model into container now
2024-05-07 17:18:43,607:INFO:_master_model_container: 15
2024-05-07 17:18:43,607:INFO:_display_container: 2
2024-05-07 17:18:43,607:INFO:DummyClassifier(constant=None, random_state=3548, strategy='prior')
2024-05-07 17:18:43,607:INFO:create_model() successfully completed......................................
2024-05-07 17:18:43,770:INFO:SubProcess create_model() end ==================================
2024-05-07 17:18:43,770:INFO:Creating metrics dataframe
2024-05-07 17:18:43,778:INFO:Initializing create_model()
2024-05-07 17:18:43,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2024-05-07 17:18:43,778:INFO:Checking exceptions
2024-05-07 17:18:43,779:INFO:Importing libraries
2024-05-07 17:18:43,779:INFO:Copying training dataset
2024-05-07 17:18:43,781:INFO:Defining folds
2024-05-07 17:18:43,781:INFO:Declaring metric variables
2024-05-07 17:18:43,781:INFO:Importing untrained model
2024-05-07 17:18:43,781:INFO:Declaring custom model
2024-05-07 17:18:43,781:INFO:Extra Trees Classifier Imported successfully
2024-05-07 17:18:43,781:INFO:Cross validation set to False
2024-05-07 17:18:43,781:INFO:Fitting Model
2024-05-07 17:18:43,867:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False)
2024-05-07 17:18:43,868:INFO:create_model() successfully completed......................................
2024-05-07 17:18:44,036:INFO:Creating Dashboard logs
2024-05-07 17:18:44,037:INFO:Model: Extra Trees Classifier
2024-05-07 17:18:44,047:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3548, 'verbose': 0, 'warm_start': False}
2024-05-07 17:18:44,070:INFO:Initializing predict_model()
2024-05-07 17:18:44,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309f70940>)
2024-05-07 17:18:44,071:INFO:Checking exceptions
2024-05-07 17:18:44,071:INFO:Preloading libraries
2024-05-07 17:18:44,275:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-05-07 17:18:44,658:INFO:Creating Dashboard logs
2024-05-07 17:18:44,660:INFO:Model: CatBoost Classifier
2024-05-07 17:18:44,668:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/pycaret/loggers/dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
  File "/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/catboost/core.py", line 3413, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2024-05-07 17:18:44,668:INFO:Logged params: {}
2024-05-07 17:18:44,851:INFO:Creating Dashboard logs
2024-05-07 17:18:44,853:INFO:Model: Random Forest Classifier
2024-05-07 17:18:44,859:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3548, 'verbose': 0, 'warm_start': False}
2024-05-07 17:18:45,050:INFO:Creating Dashboard logs
2024-05-07 17:18:45,051:INFO:Model: Decision Tree Classifier
2024-05-07 17:18:45,057:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 3548, 'splitter': 'best'}
2024-05-07 17:18:45,261:INFO:Creating Dashboard logs
2024-05-07 17:18:45,263:INFO:Model: Extreme Gradient Boosting
2024-05-07 17:18:45,270:INFO:Logged params: {'objective': 'binary:logistic', 'use_label_encoder': None, 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'gpu_id': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': None, 'predictor': None, 'random_state': 3548, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2024-05-07 17:18:45,476:INFO:Creating Dashboard logs
2024-05-07 17:18:45,477:INFO:Model: Gradient Boosting Classifier
2024-05-07 17:18:45,485:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3548, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-05-07 17:18:45,677:INFO:Creating Dashboard logs
2024-05-07 17:18:45,678:INFO:Model: Ada Boost Classifier
2024-05-07 17:18:45,684:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 3548}
2024-05-07 17:18:45,871:INFO:Creating Dashboard logs
2024-05-07 17:18:45,873:INFO:Model: Quadratic Discriminant Analysis
2024-05-07 17:18:45,878:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2024-05-07 17:18:46,071:INFO:Creating Dashboard logs
2024-05-07 17:18:46,073:INFO:Model: Logistic Regression
2024-05-07 17:18:46,079:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 3548, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2024-05-07 17:18:46,273:INFO:Creating Dashboard logs
2024-05-07 17:18:46,275:INFO:Model: Naive Bayes
2024-05-07 17:18:46,281:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2024-05-07 17:18:46,476:INFO:Creating Dashboard logs
2024-05-07 17:18:46,478:INFO:Model: Linear Discriminant Analysis
2024-05-07 17:18:46,484:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2024-05-07 17:18:46,685:INFO:Creating Dashboard logs
2024-05-07 17:18:46,686:INFO:Model: Ridge Classifier
2024-05-07 17:18:46,693:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3548, 'solver': 'auto', 'tol': 0.0001}
2024-05-07 17:18:46,893:INFO:Creating Dashboard logs
2024-05-07 17:18:46,894:INFO:Model: K Neighbors Classifier
2024-05-07 17:18:46,901:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-05-07 17:18:47,092:INFO:Creating Dashboard logs
2024-05-07 17:18:47,093:INFO:Model: SVM - Linear Kernel
2024-05-07 17:18:47,099:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 3548, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-05-07 17:18:47,289:INFO:Creating Dashboard logs
2024-05-07 17:18:47,290:INFO:Model: Dummy Classifier
2024-05-07 17:18:47,297:INFO:Logged params: {'constant': None, 'random_state': 3548, 'strategy': 'prior'}
2024-05-07 17:18:47,484:INFO:_master_model_container: 15
2024-05-07 17:18:47,484:INFO:_display_container: 2
2024-05-07 17:18:47,484:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False)
2024-05-07 17:18:47,484:INFO:compare_models() successfully completed......................................
2024-05-07 17:24:27,469:INFO:Initializing evaluate_model()
2024-05-07 17:24:27,471:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-05-07 17:24:27,495:INFO:Initializing plot_model()
2024-05-07 17:24:27,495:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, system=True)
2024-05-07 17:24:27,495:INFO:Checking exceptions
2024-05-07 17:24:27,522:INFO:Preloading libraries
2024-05-07 17:24:27,527:INFO:Copying training dataset
2024-05-07 17:24:27,528:INFO:Plot type: pipeline
2024-05-07 17:24:27,588:INFO:Visual Rendered Successfully
2024-05-07 17:24:27,833:INFO:plot_model() successfully completed......................................
2024-05-07 17:25:03,139:INFO:Initializing interpret_model()
2024-05-07 17:25:03,140:INFO:interpret_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=1, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>)
2024-05-07 17:25:03,140:INFO:Checking exceptions
2024-05-07 17:25:03,141:INFO:Soft dependency imported: shap: 0.45.0
2024-05-07 17:25:22,050:INFO:Soft dependency imported: explainerdashboard: 0.4.7
2024-05-07 17:27:17,800:INFO:Initializing plot_model()
2024-05-07 17:27:17,803:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs={'percent': True}, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, system=True)
2024-05-07 17:27:17,803:INFO:Checking exceptions
2024-05-07 17:27:17,825:INFO:Preloading libraries
2024-05-07 17:27:17,830:INFO:Copying training dataset
2024-05-07 17:27:17,830:INFO:Plot type: confusion_matrix
2024-05-07 17:27:17,859:INFO:Fitting Model
2024-05-07 17:27:17,860:WARNING:/Users/achbj/opt/miniconda3/envs/nn/lib/python3.10/site-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-05-07 17:27:17,860:INFO:Scoring test/hold-out set
2024-05-07 17:27:17,938:INFO:Visual Rendered Successfully
2024-05-07 17:27:18,138:INFO:plot_model() successfully completed......................................
2024-05-07 17:28:10,270:INFO:Initializing plot_model()
2024-05-07 17:28:10,270:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x308244be0>, system=True)
2024-05-07 17:28:10,270:INFO:Checking exceptions
2024-05-07 17:28:10,290:INFO:Preloading libraries
2024-05-07 17:28:10,296:INFO:Copying training dataset
2024-05-07 17:28:10,297:INFO:Plot type: learning
2024-05-07 17:28:10,328:INFO:Fitting Model
2024-05-07 17:28:13,396:INFO:Visual Rendered Successfully
2024-05-07 17:28:13,619:INFO:plot_model() successfully completed......................................
2024-05-07 17:34:49,035:INFO:Initializing save_model()
2024-05-07 17:34:49,035:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), model_name=pipeline_model_HDD_V01, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-07 17:34:49,036:INFO:Adding model into prep_pipe
2024-05-07 17:34:49,074:INFO:pipeline_model_HDD_V01.pkl saved in current working directory
2024-05-07 17:34:49,077:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=3548,
                                      verbose=0, warm_start=False))],
         verbose=False)
2024-05-07 17:34:49,077:INFO:save_model() successfully completed......................................
2024-05-07 17:36:29,053:INFO:Soft dependency imported: fastapi: 0.100.0
2024-05-07 17:36:29,058:INFO:Soft dependency imported: uvicorn: 0.22.0
2024-05-07 17:36:29,058:INFO:Soft dependency imported: pydantic: 1.10.14
2024-05-07 17:36:29,065:INFO:Initializing save_model()
2024-05-07 17:36:29,066:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3548, verbose=0, warm_start=False), model_name=best_model_api, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/jh/_q3zsphn00z4nwx2cszyw4mc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-07 17:36:29,066:INFO:Adding model into prep_pipe
2024-05-07 17:36:29,099:INFO:best_model_api.pkl saved in current working directory
2024-05-07 17:36:29,102:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='d...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=3548,
                                      verbose=0, warm_start=False))],
         verbose=False)
2024-05-07 17:36:29,102:INFO:save_model() successfully completed......................................
2024-05-07 17:38:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 17:38:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 17:38:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 17:38:03,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 17:38:04,538:INFO:Initializing load_model()
2024-05-07 17:38:04,538:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 17:38:52,282:INFO:Initializing predict_model()
2024-05-07 17:38:52,283:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x14923b460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1499c89d0>)
2024-05-07 17:38:52,283:INFO:Checking exceptions
2024-05-07 17:38:52,283:INFO:Preloading libraries
2024-05-07 17:38:52,283:INFO:Set up data.
2024-05-07 17:38:52,288:INFO:Set up index.
2024-05-07 19:05:53,425:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:05:53,425:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:05:53,425:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:05:53,425:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:05:54,361:INFO:Initializing load_model()
2024-05-07 19:05:54,361:INFO:load_model(model_name=pipeline_model_HDD_V01, platform=None, authentication=None, verbose=True)
2024-05-07 19:08:23,389:INFO:Initializing predict_model()
2024-05-07 19:08:23,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x168c3b5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x168c809d0>)
2024-05-07 19:08:23,390:INFO:Checking exceptions
2024-05-07 19:08:23,390:INFO:Preloading libraries
2024-05-07 19:08:23,391:INFO:Set up data.
2024-05-07 19:08:23,394:INFO:Set up index.
2024-05-07 19:11:47,498:INFO:Initializing predict_model()
2024-05-07 19:11:47,498:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x168bfa770>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x167173a30>)
2024-05-07 19:11:47,498:INFO:Checking exceptions
2024-05-07 19:11:47,498:INFO:Preloading libraries
2024-05-07 19:11:47,499:INFO:Set up data.
2024-05-07 19:11:47,504:INFO:Set up index.
2024-05-07 19:13:09,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:13:09,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:13:09,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:13:09,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:13:10,634:INFO:Initializing load_model()
2024-05-07 19:13:10,634:INFO:load_model(model_name=pipeline_model_HDD_V01, platform=None, authentication=None, verbose=True)
2024-05-07 19:13:31,036:INFO:Initializing predict_model()
2024-05-07 19:13:31,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x173b37a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x173b68a60>)
2024-05-07 19:13:31,037:INFO:Checking exceptions
2024-05-07 19:13:31,037:INFO:Preloading libraries
2024-05-07 19:13:31,038:INFO:Set up data.
2024-05-07 19:13:31,042:INFO:Set up index.
2024-05-07 19:14:21,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:14:21,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:14:21,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:14:21,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:14:22,685:INFO:Initializing load_model()
2024-05-07 19:14:22,685:INFO:load_model(model_name=pipeline_model_HDD_V01, platform=None, authentication=None, verbose=True)
2024-05-07 19:14:40,599:INFO:Initializing predict_model()
2024-05-07 19:14:40,599:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16343b520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16347c9d0>)
2024-05-07 19:14:40,599:INFO:Checking exceptions
2024-05-07 19:14:40,599:INFO:Preloading libraries
2024-05-07 19:14:40,600:INFO:Set up data.
2024-05-07 19:14:40,604:INFO:Set up index.
2024-05-07 19:16:20,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:16:20,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:16:20,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:16:20,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:16:21,430:INFO:Initializing load_model()
2024-05-07 19:16:21,430:INFO:load_model(model_name=pipeline_model_HDD_V01, platform=None, authentication=None, verbose=True)
2024-05-07 19:16:41,324:INFO:Initializing predict_model()
2024-05-07 19:16:41,324:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16beb3580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16bef09d0>)
2024-05-07 19:16:41,324:INFO:Checking exceptions
2024-05-07 19:16:41,324:INFO:Preloading libraries
2024-05-07 19:16:41,325:INFO:Set up data.
2024-05-07 19:16:41,328:INFO:Set up index.
2024-05-07 19:19:57,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:19:57,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:19:57,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:19:57,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:19:58,294:INFO:Initializing load_model()
2024-05-07 19:19:58,294:INFO:load_model(model_name=pipeline_model_HDD_V01, platform=None, authentication=None, verbose=True)
2024-05-07 19:20:04,684:INFO:Initializing predict_model()
2024-05-07 19:20:04,685:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167f37b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x167f789d0>)
2024-05-07 19:20:04,685:INFO:Checking exceptions
2024-05-07 19:20:04,685:INFO:Preloading libraries
2024-05-07 19:20:04,685:INFO:Set up data.
2024-05-07 19:20:04,688:INFO:Set up index.
2024-05-07 19:21:57,756:INFO:Initializing predict_model()
2024-05-07 19:21:57,758:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x167f34f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1680108b0>)
2024-05-07 19:21:57,758:INFO:Checking exceptions
2024-05-07 19:21:57,758:INFO:Preloading libraries
2024-05-07 19:21:57,758:INFO:Set up data.
2024-05-07 19:21:57,763:INFO:Set up index.
2024-05-07 19:22:25,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:22:25,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:22:25,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:22:25,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:22:26,825:INFO:Initializing load_model()
2024-05-07 19:22:26,825:INFO:load_model(model_name=pipeline_model_HDD_V01, platform=None, authentication=None, verbose=True)
2024-05-07 19:22:40,465:INFO:Initializing predict_model()
2024-05-07 19:22:40,466:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f837b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c3049d0>)
2024-05-07 19:22:40,466:INFO:Checking exceptions
2024-05-07 19:22:40,466:INFO:Preloading libraries
2024-05-07 19:22:40,466:INFO:Set up data.
2024-05-07 19:22:40,469:INFO:Set up index.
2024-05-07 19:24:23,557:INFO:Initializing predict_model()
2024-05-07 19:24:23,559:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f834820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c3988b0>)
2024-05-07 19:24:23,559:INFO:Checking exceptions
2024-05-07 19:24:23,559:INFO:Preloading libraries
2024-05-07 19:24:23,559:INFO:Set up data.
2024-05-07 19:24:23,565:INFO:Set up index.
2024-05-07 19:25:47,829:INFO:Initializing predict_model()
2024-05-07 19:25:47,830:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f835bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16c398940>)
2024-05-07 19:25:47,830:INFO:Checking exceptions
2024-05-07 19:25:47,830:INFO:Preloading libraries
2024-05-07 19:25:47,831:INFO:Set up data.
2024-05-07 19:25:47,836:INFO:Set up index.
2024-05-07 19:29:16,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:29:16,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:29:16,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:29:16,394:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:29:17,302:INFO:Initializing load_model()
2024-05-07 19:29:17,302:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 19:29:36,916:INFO:Initializing predict_model()
2024-05-07 19:29:36,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174fcbb50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17220c9d0>)
2024-05-07 19:29:36,916:INFO:Checking exceptions
2024-05-07 19:29:36,916:INFO:Preloading libraries
2024-05-07 19:29:36,916:INFO:Set up data.
2024-05-07 19:29:36,921:INFO:Set up index.
2024-05-07 19:30:34,047:INFO:Initializing predict_model()
2024-05-07 19:30:34,048:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x171f8cd30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x172290040>)
2024-05-07 19:30:34,048:INFO:Checking exceptions
2024-05-07 19:30:34,048:INFO:Preloading libraries
2024-05-07 19:30:34,048:INFO:Set up data.
2024-05-07 19:30:34,054:INFO:Set up index.
2024-05-07 19:32:52,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:32:52,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:32:52,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:32:52,333:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:32:53,197:INFO:Initializing load_model()
2024-05-07 19:32:53,197:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 19:33:13,603:INFO:Initializing predict_model()
2024-05-07 19:33:13,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17319bb50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17110c9d0>)
2024-05-07 19:33:13,603:INFO:Checking exceptions
2024-05-07 19:33:13,603:INFO:Preloading libraries
2024-05-07 19:33:13,603:INFO:Set up data.
2024-05-07 19:33:13,611:INFO:Set up index.
2024-05-07 19:33:59,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:33:59,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:33:59,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:33:59,589:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:34:00,397:INFO:Initializing load_model()
2024-05-07 19:34:00,397:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 19:34:12,029:INFO:Initializing predict_model()
2024-05-07 19:34:12,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x152883a60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x152a109d0>)
2024-05-07 19:34:12,029:INFO:Checking exceptions
2024-05-07 19:34:12,029:INFO:Preloading libraries
2024-05-07 19:34:12,029:INFO:Set up data.
2024-05-07 19:34:12,032:INFO:Set up index.
2024-05-07 19:36:19,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:36:19,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:36:19,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:36:19,406:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 19:36:20,385:INFO:Initializing load_model()
2024-05-07 19:36:20,385:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 19:36:30,109:INFO:Initializing predict_model()
2024-05-07 19:36:30,110:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x168f377f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1696c09d0>)
2024-05-07 19:36:30,110:INFO:Checking exceptions
2024-05-07 19:36:30,110:INFO:Preloading libraries
2024-05-07 19:36:30,110:INFO:Set up data.
2024-05-07 19:36:30,115:INFO:Set up index.
2024-05-07 20:04:15,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:04:15,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:04:15,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:04:15,575:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:04:16,491:INFO:Initializing load_model()
2024-05-07 20:04:16,491:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:10:45,743:INFO:Initializing predict_model()
2024-05-07 20:10:45,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x161b8ba90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x161d009d0>)
2024-05-07 20:10:45,744:INFO:Checking exceptions
2024-05-07 20:10:45,744:INFO:Preloading libraries
2024-05-07 20:10:45,747:INFO:Set up data.
2024-05-07 20:10:45,756:INFO:Set up index.
2024-05-07 20:11:19,457:INFO:Initializing predict_model()
2024-05-07 20:11:19,458:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x161b47850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16023b9a0>)
2024-05-07 20:11:19,458:INFO:Checking exceptions
2024-05-07 20:11:19,458:INFO:Preloading libraries
2024-05-07 20:11:19,459:INFO:Set up data.
2024-05-07 20:11:19,462:INFO:Set up index.
2024-05-07 20:11:29,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:11:29,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:11:29,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:11:29,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:11:31,046:INFO:Initializing load_model()
2024-05-07 20:11:31,046:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:11:31,630:INFO:Initializing predict_model()
2024-05-07 20:11:31,630:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16a53bd60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16a5689d0>)
2024-05-07 20:11:31,630:INFO:Checking exceptions
2024-05-07 20:11:31,630:INFO:Preloading libraries
2024-05-07 20:11:31,630:INFO:Set up data.
2024-05-07 20:11:31,633:INFO:Set up index.
2024-05-07 20:12:31,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:12:31,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:12:31,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:12:31,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:12:32,760:INFO:Initializing load_model()
2024-05-07 20:12:32,761:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:13:03,916:INFO:Initializing predict_model()
2024-05-07 20:13:03,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15bb3bd60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15bb689d0>)
2024-05-07 20:13:03,916:INFO:Checking exceptions
2024-05-07 20:13:03,916:INFO:Preloading libraries
2024-05-07 20:13:03,917:INFO:Set up data.
2024-05-07 20:13:03,920:INFO:Set up index.
2024-05-07 20:13:15,601:INFO:Initializing predict_model()
2024-05-07 20:13:15,603:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x13d66f670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15a93b9a0>)
2024-05-07 20:13:15,603:INFO:Checking exceptions
2024-05-07 20:13:15,603:INFO:Preloading libraries
2024-05-07 20:13:15,604:INFO:Set up data.
2024-05-07 20:13:15,610:INFO:Set up index.
2024-05-07 20:13:31,387:INFO:Initializing predict_model()
2024-05-07 20:13:31,387:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15a9ed240>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15bafe9e0>)
2024-05-07 20:13:31,387:INFO:Checking exceptions
2024-05-07 20:13:31,387:INFO:Preloading libraries
2024-05-07 20:13:31,388:INFO:Set up data.
2024-05-07 20:13:31,391:INFO:Set up index.
2024-05-07 20:13:51,821:INFO:Initializing predict_model()
2024-05-07 20:13:51,823:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15a9ed150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15bafd750>)
2024-05-07 20:13:51,823:INFO:Checking exceptions
2024-05-07 20:13:51,823:INFO:Preloading libraries
2024-05-07 20:13:51,823:INFO:Set up data.
2024-05-07 20:13:51,828:INFO:Set up index.
2024-05-07 20:14:34,658:INFO:Initializing predict_model()
2024-05-07 20:14:34,659:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15a9ed1e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15bafe9e0>)
2024-05-07 20:14:34,659:INFO:Checking exceptions
2024-05-07 20:14:34,659:INFO:Preloading libraries
2024-05-07 20:14:34,660:INFO:Set up data.
2024-05-07 20:14:34,665:INFO:Set up index.
2024-05-07 20:15:49,503:INFO:Initializing predict_model()
2024-05-07 20:15:49,504:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x13d66f5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13d67ac20>)
2024-05-07 20:15:49,504:INFO:Checking exceptions
2024-05-07 20:15:49,504:INFO:Preloading libraries
2024-05-07 20:15:49,506:INFO:Set up data.
2024-05-07 20:15:49,510:INFO:Set up index.
2024-05-07 20:15:57,259:INFO:Initializing predict_model()
2024-05-07 20:15:57,260:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15bafb9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15bafdcf0>)
2024-05-07 20:15:57,261:INFO:Checking exceptions
2024-05-07 20:15:57,261:INFO:Preloading libraries
2024-05-07 20:15:57,261:INFO:Set up data.
2024-05-07 20:15:57,266:INFO:Set up index.
2024-05-07 20:16:06,167:INFO:Initializing predict_model()
2024-05-07 20:16:06,167:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15bafbbb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15bb6b640>)
2024-05-07 20:16:06,167:INFO:Checking exceptions
2024-05-07 20:16:06,167:INFO:Preloading libraries
2024-05-07 20:16:06,168:INFO:Set up data.
2024-05-07 20:16:06,175:INFO:Set up index.
2024-05-07 20:17:34,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:17:34,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:17:34,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:17:34,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:17:35,373:INFO:Initializing load_model()
2024-05-07 20:17:35,374:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:17:40,620:INFO:Initializing predict_model()
2024-05-07 20:17:40,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16ff3bd60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16ff689d0>)
2024-05-07 20:17:40,620:INFO:Checking exceptions
2024-05-07 20:17:40,620:INFO:Preloading libraries
2024-05-07 20:17:40,620:INFO:Set up data.
2024-05-07 20:17:40,622:INFO:Set up index.
2024-05-07 20:18:22,198:INFO:Initializing predict_model()
2024-05-07 20:18:22,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16fefba00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15de42c20>)
2024-05-07 20:18:22,199:INFO:Checking exceptions
2024-05-07 20:18:22,199:INFO:Preloading libraries
2024-05-07 20:18:22,199:INFO:Set up data.
2024-05-07 20:18:22,204:INFO:Set up index.
2024-05-07 20:18:42,083:INFO:Initializing predict_model()
2024-05-07 20:18:42,084:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16fefba30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16fefe440>)
2024-05-07 20:18:42,084:INFO:Checking exceptions
2024-05-07 20:18:42,084:INFO:Preloading libraries
2024-05-07 20:18:42,085:INFO:Set up data.
2024-05-07 20:18:42,090:INFO:Set up index.
2024-05-07 20:20:14,534:INFO:Initializing predict_model()
2024-05-07 20:20:14,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15de3b6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16fefd360>)
2024-05-07 20:20:14,536:INFO:Checking exceptions
2024-05-07 20:20:14,536:INFO:Preloading libraries
2024-05-07 20:20:14,537:INFO:Set up data.
2024-05-07 20:20:14,544:INFO:Set up index.
2024-05-07 20:20:54,149:INFO:Initializing predict_model()
2024-05-07 20:20:54,151:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16c540c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16fefd750>)
2024-05-07 20:20:54,151:INFO:Checking exceptions
2024-05-07 20:20:54,151:INFO:Preloading libraries
2024-05-07 20:20:54,151:INFO:Set up data.
2024-05-07 20:20:54,158:INFO:Set up index.
2024-05-07 20:21:03,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:21:03,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:21:03,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:21:03,258:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:21:04,152:INFO:Initializing load_model()
2024-05-07 20:21:04,152:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:21:13,433:INFO:Initializing predict_model()
2024-05-07 20:21:13,433:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x159e3bd60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x159e6c9d0>)
2024-05-07 20:21:13,434:INFO:Checking exceptions
2024-05-07 20:21:13,434:INFO:Preloading libraries
2024-05-07 20:21:13,434:INFO:Set up data.
2024-05-07 20:21:13,437:INFO:Set up index.
2024-05-07 20:22:02,247:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:22:02,247:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:22:02,247:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:22:02,247:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:22:02,994:INFO:Initializing load_model()
2024-05-07 20:22:02,994:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:22:09,786:INFO:Initializing predict_model()
2024-05-07 20:22:09,787:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15cc3b0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15ccac9d0>)
2024-05-07 20:22:09,787:INFO:Checking exceptions
2024-05-07 20:22:09,787:INFO:Preloading libraries
2024-05-07 20:22:09,787:INFO:Set up data.
2024-05-07 20:22:09,790:INFO:Set up index.
2024-05-07 20:23:29,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:23:29,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:23:29,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:23:29,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:23:30,155:INFO:Initializing load_model()
2024-05-07 20:23:30,155:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:23:44,826:INFO:Initializing predict_model()
2024-05-07 20:23:44,826:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15fe3bd60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15fe709d0>)
2024-05-07 20:23:44,826:INFO:Checking exceptions
2024-05-07 20:23:44,826:INFO:Preloading libraries
2024-05-07 20:23:44,826:INFO:Set up data.
2024-05-07 20:23:44,829:INFO:Set up index.
2024-05-07 20:27:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:27:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:27:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:27:44,419:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:27:45,348:INFO:Initializing load_model()
2024-05-07 20:27:45,348:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:27:52,958:INFO:Initializing predict_model()
2024-05-07 20:27:52,958:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1468eefb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1469609d0>)
2024-05-07 20:27:52,958:INFO:Checking exceptions
2024-05-07 20:27:52,958:INFO:Preloading libraries
2024-05-07 20:27:52,959:INFO:Set up data.
2024-05-07 20:27:52,961:INFO:Set up index.
2024-05-07 20:28:54,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:28:54,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:28:54,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:28:54,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:28:55,607:INFO:Initializing load_model()
2024-05-07 20:28:55,607:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:28:58,844:INFO:Initializing predict_model()
2024-05-07 20:28:58,844:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x13e23b070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13e2ac9d0>)
2024-05-07 20:28:58,844:INFO:Checking exceptions
2024-05-07 20:28:58,844:INFO:Preloading libraries
2024-05-07 20:28:58,845:INFO:Set up data.
2024-05-07 20:28:58,848:INFO:Set up index.
2024-05-07 20:29:30,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:29:30,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:29:30,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:29:30,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:29:31,128:INFO:Initializing load_model()
2024-05-07 20:29:31,128:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:29:34,937:INFO:Initializing predict_model()
2024-05-07 20:29:34,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x149a3b070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x149aac9d0>)
2024-05-07 20:29:34,937:INFO:Checking exceptions
2024-05-07 20:29:34,937:INFO:Preloading libraries
2024-05-07 20:29:34,938:INFO:Set up data.
2024-05-07 20:29:34,940:INFO:Set up index.
2024-05-07 20:30:14,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:30:14,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:30:14,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:30:14,288:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 20:30:15,101:INFO:Initializing load_model()
2024-05-07 20:30:15,102:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 20:30:22,730:INFO:Initializing predict_model()
2024-05-07 20:30:22,730:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x159aeb070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x159b609d0>)
2024-05-07 20:30:22,730:INFO:Checking exceptions
2024-05-07 20:30:22,730:INFO:Preloading libraries
2024-05-07 20:30:22,731:INFO:Set up data.
2024-05-07 20:30:22,733:INFO:Set up index.
2024-05-07 21:26:34,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:26:34,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:26:34,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:26:34,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:26:35,756:INFO:Initializing load_model()
2024-05-07 21:26:35,756:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 21:26:46,277:INFO:Initializing predict_model()
2024-05-07 21:26:46,277:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17cdef070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17ce609d0>)
2024-05-07 21:26:46,277:INFO:Checking exceptions
2024-05-07 21:26:46,277:INFO:Preloading libraries
2024-05-07 21:26:46,277:INFO:Set up data.
2024-05-07 21:26:46,280:INFO:Set up index.
2024-05-07 21:27:12,510:INFO:Initializing predict_model()
2024-05-07 21:27:12,512:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17ce334c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b8a2c20>)
2024-05-07 21:27:12,512:INFO:Checking exceptions
2024-05-07 21:27:12,512:INFO:Preloading libraries
2024-05-07 21:27:12,512:INFO:Set up data.
2024-05-07 21:27:12,519:INFO:Set up index.
2024-05-07 21:27:53,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:27:53,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:27:53,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:27:53,690:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:27:54,435:INFO:Initializing load_model()
2024-05-07 21:27:54,435:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 21:28:09,136:INFO:Initializing predict_model()
2024-05-07 21:28:09,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x159c2f520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x159c7c9d0>)
2024-05-07 21:28:09,136:INFO:Checking exceptions
2024-05-07 21:28:09,136:INFO:Preloading libraries
2024-05-07 21:28:09,136:INFO:Set up data.
2024-05-07 21:28:09,142:INFO:Set up index.
2024-05-07 21:29:04,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:29:04,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:29:04,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:29:04,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:29:05,740:INFO:Initializing load_model()
2024-05-07 21:29:05,740:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 21:29:27,334:INFO:Initializing predict_model()
2024-05-07 21:29:27,334:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16712f460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1678c89d0>)
2024-05-07 21:29:27,334:INFO:Checking exceptions
2024-05-07 21:29:27,334:INFO:Preloading libraries
2024-05-07 21:29:27,335:INFO:Set up data.
2024-05-07 21:29:27,339:INFO:Set up index.
2024-05-07 21:31:48,473:INFO:Initializing predict_model()
2024-05-07 21:31:48,473:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1660a1060>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x165fef9a0>)
2024-05-07 21:31:48,473:INFO:Checking exceptions
2024-05-07 21:31:48,474:INFO:Preloading libraries
2024-05-07 21:31:48,475:INFO:Set up data.
2024-05-07 21:31:48,477:INFO:Set up index.
2024-05-07 21:44:16,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:44:16,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:44:16,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:44:16,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-07 21:44:17,087:INFO:Initializing load_model()
2024-05-07 21:44:17,087:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-07 21:44:38,478:INFO:Initializing predict_model()
2024-05-07 21:44:38,478:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x146f2f460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x146f7c9d0>)
2024-05-07 21:44:38,478:INFO:Checking exceptions
2024-05-07 21:44:38,478:INFO:Preloading libraries
2024-05-07 21:44:38,479:INFO:Set up data.
2024-05-07 21:44:38,485:INFO:Set up index.
2024-05-07 21:44:45,876:INFO:Initializing predict_model()
2024-05-07 21:44:45,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1455f5120>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x146f01cf0>)
2024-05-07 21:44:45,876:INFO:Checking exceptions
2024-05-07 21:44:45,876:INFO:Preloading libraries
2024-05-07 21:44:45,877:INFO:Set up data.
2024-05-07 21:44:45,885:INFO:Set up index.
2024-05-08 08:11:55,779:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 08:11:55,779:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 08:11:55,779:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 08:11:55,779:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-08 08:11:57,183:INFO:Initializing load_model()
2024-05-08 08:11:57,184:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 09:02:06,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 09:02:06,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 09:02:06,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 09:02:06,105:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 09:02:08,249:INFO:Initializing load_model()
2024-05-11 09:02:08,249:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 11:23:26,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:23:26,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:23:26,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:23:26,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:23:28,180:INFO:Initializing load_model()
2024-05-11 11:23:28,180:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 11:44:46,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:44:46,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:44:46,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:44:46,044:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:44:47,189:INFO:Initializing load_model()
2024-05-11 11:44:47,189:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 11:49:17,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:49:17,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:49:17,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:49:17,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:49:18,317:INFO:Initializing load_model()
2024-05-11 11:49:18,317:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 11:50:42,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:50:42,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:50:42,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:50:42,431:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:50:43,567:INFO:Initializing load_model()
2024-05-11 11:50:43,567:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 11:52:31,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:52:31,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:52:31,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:52:31,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 11:54:15,024:INFO:Initializing load_model()
2024-05-11 11:54:15,025:INFO:load_model(model_name=./best_model_api.pkl, platform=None, authentication=None, verbose=True)
2024-05-11 11:54:22,420:INFO:Initializing load_model()
2024-05-11 11:54:22,420:INFO:load_model(model_name=./best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 16:23:30,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:23:30,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:23:30,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:23:30,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:23:31,996:INFO:Initializing load_model()
2024-05-11 16:23:31,996:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 16:28:44,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:28:44,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:28:44,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:28:44,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 16:28:46,595:INFO:Initializing load_model()
2024-05-11 16:28:46,595:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 16:41:05,957:INFO:Initializing predict_model()
2024-05-11 16:41:05,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x172b2b880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x170454f70>)
2024-05-11 16:41:05,957:INFO:Checking exceptions
2024-05-11 16:41:05,958:INFO:Preloading libraries
2024-05-11 16:41:05,958:INFO:Set up data.
2024-05-11 16:41:05,963:INFO:Set up index.
2024-05-11 16:57:27,956:INFO:Initializing predict_model()
2024-05-11 16:57:27,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x172b282e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x172b09d80>)
2024-05-11 16:57:27,957:INFO:Checking exceptions
2024-05-11 16:57:27,957:INFO:Preloading libraries
2024-05-11 16:57:27,958:INFO:Set up data.
2024-05-11 16:57:27,961:INFO:Set up index.
2024-05-11 16:58:03,265:INFO:Initializing predict_model()
2024-05-11 16:58:03,266:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16dff1630>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x172b0a290>)
2024-05-11 16:58:03,266:INFO:Checking exceptions
2024-05-11 16:58:03,266:INFO:Preloading libraries
2024-05-11 16:58:03,266:INFO:Set up data.
2024-05-11 16:58:03,268:INFO:Set up index.
2024-05-11 16:59:52,428:INFO:Initializing predict_model()
2024-05-11 16:59:52,429:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16dff16f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x172b09bd0>)
2024-05-11 16:59:52,429:INFO:Checking exceptions
2024-05-11 16:59:52,429:INFO:Preloading libraries
2024-05-11 16:59:52,429:INFO:Set up data.
2024-05-11 16:59:52,434:INFO:Set up index.
2024-05-11 17:00:21,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:00:21,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:00:21,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:00:21,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:00:22,108:INFO:Initializing load_model()
2024-05-11 17:00:22,109:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 17:00:45,645:INFO:Initializing predict_model()
2024-05-11 17:00:45,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1465dbdf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x146770e50>)
2024-05-11 17:00:45,646:INFO:Checking exceptions
2024-05-11 17:00:45,646:INFO:Preloading libraries
2024-05-11 17:00:45,646:INFO:Set up data.
2024-05-11 17:00:45,648:INFO:Set up index.
2024-05-11 17:01:59,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:01:59,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:01:59,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:01:59,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:01:59,811:INFO:Initializing load_model()
2024-05-11 17:01:59,811:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 17:02:39,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:02:39,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:02:39,705:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:02:39,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 17:02:40,295:INFO:Initializing load_model()
2024-05-11 17:02:40,296:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 17:02:49,198:INFO:Initializing predict_model()
2024-05-11 17:02:49,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fce50>)
2024-05-11 17:02:49,198:INFO:Checking exceptions
2024-05-11 17:02:49,198:INFO:Preloading libraries
2024-05-11 17:02:49,199:INFO:Set up data.
2024-05-11 17:02:49,201:INFO:Set up index.
2024-05-11 17:03:55,126:INFO:Initializing predict_model()
2024-05-11 17:03:55,126:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1423da650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421ff910>)
2024-05-11 17:03:55,126:INFO:Checking exceptions
2024-05-11 17:03:55,126:INFO:Preloading libraries
2024-05-11 17:03:55,126:INFO:Set up data.
2024-05-11 17:03:55,128:INFO:Set up index.
2024-05-11 17:04:52,591:INFO:Initializing predict_model()
2024-05-11 17:04:52,592:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x142395660>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fd480>)
2024-05-11 17:04:52,592:INFO:Checking exceptions
2024-05-11 17:04:52,592:INFO:Preloading libraries
2024-05-11 17:04:52,592:INFO:Set up data.
2024-05-11 17:04:52,597:INFO:Set up index.
2024-05-11 17:05:27,189:INFO:Initializing predict_model()
2024-05-11 17:05:27,189:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fd480>)
2024-05-11 17:05:27,189:INFO:Checking exceptions
2024-05-11 17:05:27,189:INFO:Preloading libraries
2024-05-11 17:05:27,190:INFO:Set up data.
2024-05-11 17:05:27,195:INFO:Set up index.
2024-05-11 17:05:41,032:INFO:Initializing predict_model()
2024-05-11 17:05:41,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fd480>)
2024-05-11 17:05:41,032:INFO:Checking exceptions
2024-05-11 17:05:41,033:INFO:Preloading libraries
2024-05-11 17:05:41,033:INFO:Set up data.
2024-05-11 17:05:41,035:INFO:Set up index.
2024-05-11 17:05:49,858:INFO:Initializing predict_model()
2024-05-11 17:05:49,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d4250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fd480>)
2024-05-11 17:05:49,858:INFO:Checking exceptions
2024-05-11 17:05:49,858:INFO:Preloading libraries
2024-05-11 17:05:49,859:INFO:Set up data.
2024-05-11 17:05:49,863:INFO:Set up index.
2024-05-11 17:05:59,680:INFO:Initializing predict_model()
2024-05-11 17:05:59,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d42e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421ffd90>)
2024-05-11 17:05:59,680:INFO:Checking exceptions
2024-05-11 17:05:59,680:INFO:Preloading libraries
2024-05-11 17:05:59,681:INFO:Set up data.
2024-05-11 17:05:59,684:INFO:Set up index.
2024-05-11 17:08:35,658:INFO:Initializing predict_model()
2024-05-11 17:08:35,660:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d41f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421ffeb0>)
2024-05-11 17:08:35,661:INFO:Checking exceptions
2024-05-11 17:08:35,661:INFO:Preloading libraries
2024-05-11 17:08:35,661:INFO:Set up data.
2024-05-11 17:08:35,665:INFO:Set up index.
2024-05-11 17:09:00,705:INFO:Initializing predict_model()
2024-05-11 17:09:00,705:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7c70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421ffe20>)
2024-05-11 17:09:00,705:INFO:Checking exceptions
2024-05-11 17:09:00,705:INFO:Preloading libraries
2024-05-11 17:09:00,706:INFO:Set up data.
2024-05-11 17:09:00,712:INFO:Set up index.
2024-05-11 19:30:01,573:INFO:Initializing predict_model()
2024-05-11 19:30:01,574:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421ffeb0>)
2024-05-11 19:30:01,574:INFO:Checking exceptions
2024-05-11 19:30:01,574:INFO:Preloading libraries
2024-05-11 19:30:01,574:INFO:Set up data.
2024-05-11 19:30:01,578:INFO:Set up index.
2024-05-11 19:30:49,596:INFO:Initializing predict_model()
2024-05-11 19:30:49,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x142397640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fce50>)
2024-05-11 19:30:49,597:INFO:Checking exceptions
2024-05-11 19:30:49,597:INFO:Preloading libraries
2024-05-11 19:30:49,597:INFO:Set up data.
2024-05-11 19:30:49,601:INFO:Set up index.
2024-05-11 19:30:55,853:INFO:Initializing predict_model()
2024-05-11 19:30:55,853:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7c70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fd480>)
2024-05-11 19:30:55,853:INFO:Checking exceptions
2024-05-11 19:30:55,853:INFO:Preloading libraries
2024-05-11 19:30:55,854:INFO:Set up data.
2024-05-11 19:30:55,858:INFO:Set up index.
2024-05-11 19:30:59,638:INFO:Initializing predict_model()
2024-05-11 19:30:59,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x142396800>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fff40>)
2024-05-11 19:30:59,639:INFO:Checking exceptions
2024-05-11 19:30:59,639:INFO:Preloading libraries
2024-05-11 19:30:59,639:INFO:Set up data.
2024-05-11 19:30:59,642:INFO:Set up index.
2024-05-11 19:31:10,883:INFO:Initializing predict_model()
2024-05-11 19:31:10,884:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7dc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421ffe20>)
2024-05-11 19:31:10,884:INFO:Checking exceptions
2024-05-11 19:31:10,884:INFO:Preloading libraries
2024-05-11 19:31:10,885:INFO:Set up data.
2024-05-11 19:31:10,890:INFO:Set up index.
2024-05-11 19:31:32,863:INFO:Initializing predict_model()
2024-05-11 19:31:32,863:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d6fe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fff40>)
2024-05-11 19:31:32,863:INFO:Checking exceptions
2024-05-11 19:31:32,863:INFO:Preloading libraries
2024-05-11 19:31:32,863:INFO:Set up data.
2024-05-11 19:31:32,865:INFO:Set up index.
2024-05-11 19:32:14,644:INFO:Initializing predict_model()
2024-05-11 19:32:14,644:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1421d7310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1421fce50>)
2024-05-11 19:32:14,644:INFO:Checking exceptions
2024-05-11 19:32:14,644:INFO:Preloading libraries
2024-05-11 19:32:14,645:INFO:Set up data.
2024-05-11 19:32:14,650:INFO:Set up index.
2024-05-11 19:32:57,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 19:32:57,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 19:32:57,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 19:32:57,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 19:32:58,452:INFO:Initializing load_model()
2024-05-11 19:32:58,452:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 19:33:04,281:INFO:Initializing predict_model()
2024-05-11 19:33:04,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f5d7a60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f770e50>)
2024-05-11 19:33:04,281:INFO:Checking exceptions
2024-05-11 19:33:04,281:INFO:Preloading libraries
2024-05-11 19:33:04,281:INFO:Set up data.
2024-05-11 19:33:04,283:INFO:Set up index.
2024-05-11 19:33:40,345:INFO:Initializing predict_model()
2024-05-11 19:33:40,346:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158a0f7f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15dd3bbe0>)
2024-05-11 19:33:40,346:INFO:Checking exceptions
2024-05-11 19:33:40,346:INFO:Preloading libraries
2024-05-11 19:33:40,346:INFO:Set up data.
2024-05-11 19:33:40,350:INFO:Set up index.
2024-05-11 20:14:40,266:INFO:Initializing predict_model()
2024-05-11 20:14:40,266:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58bbe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5bae60>)
2024-05-11 20:14:40,266:INFO:Checking exceptions
2024-05-11 20:14:40,266:INFO:Preloading libraries
2024-05-11 20:14:40,267:INFO:Set up data.
2024-05-11 20:14:40,270:INFO:Set up index.
2024-05-11 20:15:09,056:INFO:Initializing predict_model()
2024-05-11 20:15:09,056:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158a0f790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5b9bd0>)
2024-05-11 20:15:09,056:INFO:Checking exceptions
2024-05-11 20:15:09,056:INFO:Preloading libraries
2024-05-11 20:15:09,057:INFO:Set up data.
2024-05-11 20:15:09,061:INFO:Set up index.
2024-05-11 20:20:36,897:INFO:Initializing predict_model()
2024-05-11 20:20:36,899:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x158a0f7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5bae60>)
2024-05-11 20:20:36,899:INFO:Checking exceptions
2024-05-11 20:20:36,899:INFO:Preloading libraries
2024-05-11 20:20:36,899:INFO:Set up data.
2024-05-11 20:20:36,903:INFO:Set up index.
2024-05-11 20:22:00,125:INFO:Initializing predict_model()
2024-05-11 20:22:00,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58ac50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5b9bd0>)
2024-05-11 20:22:00,125:INFO:Checking exceptions
2024-05-11 20:22:00,125:INFO:Preloading libraries
2024-05-11 20:22:00,126:INFO:Set up data.
2024-05-11 20:22:00,128:INFO:Set up index.
2024-05-11 20:23:05,135:INFO:Initializing predict_model()
2024-05-11 20:23:05,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58be50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5bae60>)
2024-05-11 20:23:05,136:INFO:Checking exceptions
2024-05-11 20:23:05,136:INFO:Preloading libraries
2024-05-11 20:23:05,136:INFO:Set up data.
2024-05-11 20:23:05,140:INFO:Set up index.
2024-05-11 20:25:53,702:INFO:Initializing predict_model()
2024-05-11 20:25:53,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58ae30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5b9bd0>)
2024-05-11 20:25:53,703:INFO:Checking exceptions
2024-05-11 20:25:53,703:INFO:Preloading libraries
2024-05-11 20:25:53,704:INFO:Set up data.
2024-05-11 20:25:53,706:INFO:Set up index.
2024-05-11 20:27:52,324:INFO:Initializing predict_model()
2024-05-11 20:27:52,325:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58bee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5bae60>)
2024-05-11 20:27:52,325:INFO:Checking exceptions
2024-05-11 20:27:52,325:INFO:Preloading libraries
2024-05-11 20:27:52,325:INFO:Set up data.
2024-05-11 20:27:52,330:INFO:Set up index.
2024-05-11 21:04:57,997:INFO:Initializing predict_model()
2024-05-11 21:04:57,998:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58bf10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5b9bd0>)
2024-05-11 21:04:57,998:INFO:Checking exceptions
2024-05-11 21:04:57,998:INFO:Preloading libraries
2024-05-11 21:04:57,999:INFO:Set up data.
2024-05-11 21:04:58,003:INFO:Set up index.
2024-05-11 21:18:53,900:INFO:Initializing predict_model()
2024-05-11 21:18:53,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f5d4190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x158a1ac20>)
2024-05-11 21:18:53,900:INFO:Checking exceptions
2024-05-11 21:18:53,900:INFO:Preloading libraries
2024-05-11 21:18:53,901:INFO:Set up data.
2024-05-11 21:18:53,908:INFO:Set up index.
2024-05-11 21:21:36,948:INFO:Initializing predict_model()
2024-05-11 21:21:36,948:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f5d7d30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5ba8c0>)
2024-05-11 21:21:36,948:INFO:Checking exceptions
2024-05-11 21:21:36,948:INFO:Preloading libraries
2024-05-11 21:21:36,948:INFO:Set up data.
2024-05-11 21:21:36,952:INFO:Set up index.
2024-05-11 21:21:47,836:INFO:Initializing predict_model()
2024-05-11 21:21:47,836:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58beb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5b97e0>)
2024-05-11 21:21:47,836:INFO:Checking exceptions
2024-05-11 21:21:47,836:INFO:Preloading libraries
2024-05-11 21:21:47,837:INFO:Set up data.
2024-05-11 21:21:47,842:INFO:Set up index.
2024-05-11 21:22:16,625:INFO:Initializing predict_model()
2024-05-11 21:22:16,626:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f58bb80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f5bae60>)
2024-05-11 21:22:16,626:INFO:Checking exceptions
2024-05-11 21:22:16,626:INFO:Preloading libraries
2024-05-11 21:22:16,626:INFO:Set up data.
2024-05-11 21:22:16,630:INFO:Set up index.
2024-05-11 21:29:20,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:29:20,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:29:20,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:29:20,354:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:29:21,303:INFO:Initializing load_model()
2024-05-11 21:29:21,303:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 21:29:28,169:INFO:Initializing predict_model()
2024-05-11 21:29:28,169:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1756d7550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x172804e50>)
2024-05-11 21:29:28,169:INFO:Checking exceptions
2024-05-11 21:29:28,169:INFO:Preloading libraries
2024-05-11 21:29:28,170:INFO:Set up data.
2024-05-11 21:29:28,172:INFO:Set up index.
2024-05-11 21:30:00,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:30:00,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:30:00,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:30:00,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-11 21:30:01,711:INFO:Initializing load_model()
2024-05-11 21:30:01,711:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-11 21:30:06,276:INFO:Initializing predict_model()
2024-05-11 21:30:06,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1476db550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14786ce50>)
2024-05-11 21:30:06,276:INFO:Checking exceptions
2024-05-11 21:30:06,276:INFO:Preloading libraries
2024-05-11 21:30:06,277:INFO:Set up data.
2024-05-11 21:30:06,279:INFO:Set up index.
2024-05-12 09:36:30,070:INFO:Initializing predict_model()
2024-05-12 09:36:30,071:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x1476d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x14531fbe0>)
2024-05-12 09:36:30,071:INFO:Checking exceptions
2024-05-12 09:36:30,071:INFO:Preloading libraries
2024-05-12 09:36:30,072:INFO:Set up data.
2024-05-12 09:36:30,075:INFO:Set up index.
2024-05-12 09:46:14,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 09:46:14,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 09:46:14,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 09:46:14,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 09:46:15,511:INFO:Initializing load_model()
2024-05-12 09:46:15,511:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-12 09:47:24,319:INFO:Initializing predict_model()
2024-05-12 09:47:24,319:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x146fdbdf0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x147b04e50>)
2024-05-12 09:47:24,320:INFO:Checking exceptions
2024-05-12 09:47:24,320:INFO:Preloading libraries
2024-05-12 09:47:24,320:INFO:Set up data.
2024-05-12 09:47:24,322:INFO:Set up index.
2024-05-12 10:00:38,848:INFO:Initializing predict_model()
2024-05-12 10:00:38,848:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x146fd83d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x147b07c70>)
2024-05-12 10:00:38,848:INFO:Checking exceptions
2024-05-12 10:00:38,849:INFO:Preloading libraries
2024-05-12 10:00:38,849:INFO:Set up data.
2024-05-12 10:00:38,855:INFO:Set up index.
2024-05-12 10:01:09,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:01:09,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:01:09,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:01:09,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:01:09,782:INFO:Initializing load_model()
2024-05-12 10:01:09,782:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-12 10:01:16,649:INFO:Initializing predict_model()
2024-05-12 10:01:16,649:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f8db4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16cb04e50>)
2024-05-12 10:01:16,649:INFO:Checking exceptions
2024-05-12 10:01:16,649:INFO:Preloading libraries
2024-05-12 10:01:16,649:INFO:Set up data.
2024-05-12 10:01:16,651:INFO:Set up index.
2024-05-12 10:01:40,904:INFO:Initializing predict_model()
2024-05-12 10:01:40,904:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f8d8550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16cb065f0>)
2024-05-12 10:01:40,904:INFO:Checking exceptions
2024-05-12 10:01:40,904:INFO:Preloading libraries
2024-05-12 10:01:40,904:INFO:Set up data.
2024-05-12 10:01:40,906:INFO:Set up index.
2024-05-12 10:02:45,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:02:45,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:02:45,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:02:45,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-12 10:02:46,599:INFO:Initializing load_model()
2024-05-12 10:02:46,599:INFO:load_model(model_name=best_model_api, platform=None, authentication=None, verbose=True)
2024-05-12 10:02:51,468:INFO:Initializing predict_model()
2024-05-12 10:02:51,468:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6db610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f870e50>)
2024-05-12 10:02:51,469:INFO:Checking exceptions
2024-05-12 10:02:51,469:INFO:Preloading libraries
2024-05-12 10:02:51,469:INFO:Set up data.
2024-05-12 10:02:51,471:INFO:Set up index.
2024-05-12 10:03:59,214:INFO:Initializing predict_model()
2024-05-12 10:03:59,215:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6db100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15ddabbe0>)
2024-05-12 10:03:59,215:INFO:Checking exceptions
2024-05-12 10:03:59,215:INFO:Preloading libraries
2024-05-12 10:03:59,215:INFO:Set up data.
2024-05-12 10:03:59,219:INFO:Set up index.
2024-05-12 10:07:51,315:INFO:Initializing predict_model()
2024-05-12 10:07:51,316:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6dbdc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:07:51,316:INFO:Checking exceptions
2024-05-12 10:07:51,316:INFO:Preloading libraries
2024-05-12 10:07:51,316:INFO:Set up data.
2024-05-12 10:07:51,321:INFO:Set up index.
2024-05-12 10:10:43,806:INFO:Initializing predict_model()
2024-05-12 10:10:43,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:10:43,808:INFO:Checking exceptions
2024-05-12 10:10:43,808:INFO:Preloading libraries
2024-05-12 10:10:43,808:INFO:Set up data.
2024-05-12 10:10:43,813:INFO:Set up index.
2024-05-12 10:11:07,851:INFO:Initializing predict_model()
2024-05-12 10:11:07,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6dbdc0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:11:07,852:INFO:Checking exceptions
2024-05-12 10:11:07,852:INFO:Preloading libraries
2024-05-12 10:11:07,852:INFO:Set up data.
2024-05-12 10:11:07,859:INFO:Set up index.
2024-05-12 10:13:40,409:INFO:Initializing predict_model()
2024-05-12 10:13:40,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:13:40,410:INFO:Checking exceptions
2024-05-12 10:13:40,410:INFO:Preloading libraries
2024-05-12 10:13:40,410:INFO:Set up data.
2024-05-12 10:13:40,419:INFO:Set up index.
2024-05-12 10:14:13,690:INFO:Initializing predict_model()
2024-05-12 10:14:13,690:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:14:13,691:INFO:Checking exceptions
2024-05-12 10:14:13,691:INFO:Preloading libraries
2024-05-12 10:14:13,691:INFO:Set up data.
2024-05-12 10:14:13,694:INFO:Set up index.
2024-05-12 10:21:01,283:INFO:Initializing predict_model()
2024-05-12 10:21:01,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:21:01,284:INFO:Checking exceptions
2024-05-12 10:21:01,284:INFO:Preloading libraries
2024-05-12 10:21:01,284:INFO:Set up data.
2024-05-12 10:21:01,289:INFO:Set up index.
2024-05-12 10:24:48,145:INFO:Initializing predict_model()
2024-05-12 10:24:48,145:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6db760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:24:48,145:INFO:Checking exceptions
2024-05-12 10:24:48,145:INFO:Preloading libraries
2024-05-12 10:24:48,145:INFO:Set up data.
2024-05-12 10:24:48,147:INFO:Set up index.
2024-05-12 10:28:33,150:INFO:Initializing predict_model()
2024-05-12 10:28:33,152:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d84f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:28:33,152:INFO:Checking exceptions
2024-05-12 10:28:33,152:INFO:Preloading libraries
2024-05-12 10:28:33,152:INFO:Set up data.
2024-05-12 10:28:33,158:INFO:Set up index.
2024-05-12 10:29:28,909:INFO:Initializing predict_model()
2024-05-12 10:29:28,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6db220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:29:28,911:INFO:Checking exceptions
2024-05-12 10:29:28,911:INFO:Preloading libraries
2024-05-12 10:29:28,911:INFO:Set up data.
2024-05-12 10:29:28,914:INFO:Set up index.
2024-05-12 10:31:22,117:INFO:Initializing predict_model()
2024-05-12 10:31:22,117:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6db070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:31:22,117:INFO:Checking exceptions
2024-05-12 10:31:22,118:INFO:Preloading libraries
2024-05-12 10:31:22,118:INFO:Set up data.
2024-05-12 10:31:22,123:INFO:Set up index.
2024-05-12 10:31:32,903:INFO:Initializing predict_model()
2024-05-12 10:31:32,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6dbb20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:31:32,903:INFO:Checking exceptions
2024-05-12 10:31:32,903:INFO:Preloading libraries
2024-05-12 10:31:32,904:INFO:Set up data.
2024-05-12 10:31:32,908:INFO:Set up index.
2024-05-12 10:33:26,754:INFO:Initializing predict_model()
2024-05-12 10:33:26,755:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6db190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:33:26,755:INFO:Checking exceptions
2024-05-12 10:33:26,755:INFO:Preloading libraries
2024-05-12 10:33:26,755:INFO:Set up data.
2024-05-12 10:33:26,760:INFO:Set up index.
2024-05-12 10:36:01,349:INFO:Initializing predict_model()
2024-05-12 10:36:01,350:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:36:01,350:INFO:Checking exceptions
2024-05-12 10:36:01,350:INFO:Preloading libraries
2024-05-12 10:36:01,350:INFO:Set up data.
2024-05-12 10:36:01,352:INFO:Set up index.
2024-05-12 10:43:19,083:INFO:Initializing predict_model()
2024-05-12 10:43:19,084:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:43:19,084:INFO:Checking exceptions
2024-05-12 10:43:19,084:INFO:Preloading libraries
2024-05-12 10:43:19,085:INFO:Set up data.
2024-05-12 10:43:19,089:INFO:Set up index.
2024-05-12 10:50:12,355:INFO:Initializing predict_model()
2024-05-12 10:50:12,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:50:12,356:INFO:Checking exceptions
2024-05-12 10:50:12,356:INFO:Preloading libraries
2024-05-12 10:50:12,356:INFO:Set up data.
2024-05-12 10:50:12,358:INFO:Set up index.
2024-05-12 10:53:01,207:INFO:Initializing predict_model()
2024-05-12 10:53:01,208:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:53:01,208:INFO:Checking exceptions
2024-05-12 10:53:01,208:INFO:Preloading libraries
2024-05-12 10:53:01,209:INFO:Set up data.
2024-05-12 10:53:01,214:INFO:Set up index.
2024-05-12 10:54:34,199:INFO:Initializing predict_model()
2024-05-12 10:54:34,199:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:54:34,200:INFO:Checking exceptions
2024-05-12 10:54:34,200:INFO:Preloading libraries
2024-05-12 10:54:34,200:INFO:Set up data.
2024-05-12 10:54:34,203:INFO:Set up index.
2024-05-12 10:58:10,291:INFO:Initializing predict_model()
2024-05-12 10:58:10,293:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 10:58:10,293:INFO:Checking exceptions
2024-05-12 10:58:10,293:INFO:Preloading libraries
2024-05-12 10:58:10,293:INFO:Set up data.
2024-05-12 10:58:10,297:INFO:Set up index.
2024-05-12 10:59:30,947:INFO:Initializing predict_model()
2024-05-12 10:59:30,949:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 10:59:30,949:INFO:Checking exceptions
2024-05-12 10:59:30,949:INFO:Preloading libraries
2024-05-12 10:59:30,949:INFO:Set up data.
2024-05-12 10:59:30,953:INFO:Set up index.
2024-05-12 11:01:47,259:INFO:Initializing predict_model()
2024-05-12 11:01:47,260:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:01:47,260:INFO:Checking exceptions
2024-05-12 11:01:47,260:INFO:Preloading libraries
2024-05-12 11:01:47,261:INFO:Set up data.
2024-05-12 11:01:47,266:INFO:Set up index.
2024-05-12 11:02:07,938:INFO:Initializing predict_model()
2024-05-12 11:02:07,939:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:02:07,939:INFO:Checking exceptions
2024-05-12 11:02:07,939:INFO:Preloading libraries
2024-05-12 11:02:07,939:INFO:Set up data.
2024-05-12 11:02:07,944:INFO:Set up index.
2024-05-12 11:02:53,553:INFO:Initializing predict_model()
2024-05-12 11:02:53,554:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:02:53,554:INFO:Checking exceptions
2024-05-12 11:02:53,554:INFO:Preloading libraries
2024-05-12 11:02:53,555:INFO:Set up data.
2024-05-12 11:02:53,559:INFO:Set up index.
2024-05-12 11:03:54,061:INFO:Initializing predict_model()
2024-05-12 11:03:54,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:03:54,062:INFO:Checking exceptions
2024-05-12 11:03:54,062:INFO:Preloading libraries
2024-05-12 11:03:54,062:INFO:Set up data.
2024-05-12 11:03:54,066:INFO:Set up index.
2024-05-12 11:04:45,535:INFO:Initializing predict_model()
2024-05-12 11:04:45,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:04:45,537:INFO:Checking exceptions
2024-05-12 11:04:45,537:INFO:Preloading libraries
2024-05-12 11:04:45,537:INFO:Set up data.
2024-05-12 11:04:45,540:INFO:Set up index.
2024-05-12 11:06:31,896:INFO:Initializing predict_model()
2024-05-12 11:06:31,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:06:31,897:INFO:Checking exceptions
2024-05-12 11:06:31,897:INFO:Preloading libraries
2024-05-12 11:06:31,897:INFO:Set up data.
2024-05-12 11:06:31,899:INFO:Set up index.
2024-05-12 11:07:44,868:INFO:Initializing predict_model()
2024-05-12 11:07:44,868:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:07:44,869:INFO:Checking exceptions
2024-05-12 11:07:44,869:INFO:Preloading libraries
2024-05-12 11:07:44,869:INFO:Set up data.
2024-05-12 11:07:44,871:INFO:Set up index.
2024-05-12 11:09:00,726:INFO:Initializing predict_model()
2024-05-12 11:09:00,727:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:09:00,727:INFO:Checking exceptions
2024-05-12 11:09:00,727:INFO:Preloading libraries
2024-05-12 11:09:00,727:INFO:Set up data.
2024-05-12 11:09:00,731:INFO:Set up index.
2024-05-12 11:09:48,879:INFO:Initializing predict_model()
2024-05-12 11:09:48,880:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6db610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:09:48,880:INFO:Checking exceptions
2024-05-12 11:09:48,880:INFO:Preloading libraries
2024-05-12 11:09:48,881:INFO:Set up data.
2024-05-12 11:09:48,886:INFO:Set up index.
2024-05-12 11:10:19,759:INFO:Initializing predict_model()
2024-05-12 11:10:19,761:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:10:19,761:INFO:Checking exceptions
2024-05-12 11:10:19,761:INFO:Preloading libraries
2024-05-12 11:10:19,762:INFO:Set up data.
2024-05-12 11:10:19,767:INFO:Set up index.
2024-05-12 11:11:26,087:INFO:Initializing predict_model()
2024-05-12 11:11:26,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:11:26,087:INFO:Checking exceptions
2024-05-12 11:11:26,087:INFO:Preloading libraries
2024-05-12 11:11:26,088:INFO:Set up data.
2024-05-12 11:11:26,090:INFO:Set up index.
2024-05-12 11:12:32,110:INFO:Initializing predict_model()
2024-05-12 11:12:32,110:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:12:32,110:INFO:Checking exceptions
2024-05-12 11:12:32,110:INFO:Preloading libraries
2024-05-12 11:12:32,110:INFO:Set up data.
2024-05-12 11:12:32,115:INFO:Set up index.
2024-05-12 11:12:49,135:INFO:Initializing predict_model()
2024-05-12 11:12:49,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:12:49,136:INFO:Checking exceptions
2024-05-12 11:12:49,136:INFO:Preloading libraries
2024-05-12 11:12:49,136:INFO:Set up data.
2024-05-12 11:12:49,139:INFO:Set up index.
2024-05-12 11:13:36,803:INFO:Initializing predict_model()
2024-05-12 11:13:36,803:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:13:36,804:INFO:Checking exceptions
2024-05-12 11:13:36,804:INFO:Preloading libraries
2024-05-12 11:13:36,804:INFO:Set up data.
2024-05-12 11:13:36,807:INFO:Set up index.
2024-05-12 11:14:26,227:INFO:Initializing predict_model()
2024-05-12 11:14:26,232:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d85b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 11:14:26,233:INFO:Checking exceptions
2024-05-12 11:14:26,233:INFO:Preloading libraries
2024-05-12 11:14:26,233:INFO:Set up data.
2024-05-12 11:14:26,239:INFO:Set up index.
2024-05-12 11:15:14,204:INFO:Initializing predict_model()
2024-05-12 11:15:14,205:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2e60>)
2024-05-12 11:15:14,205:INFO:Checking exceptions
2024-05-12 11:15:14,205:INFO:Preloading libraries
2024-05-12 11:15:14,206:INFO:Set up data.
2024-05-12 11:15:14,208:INFO:Set up index.
2024-05-12 13:17:06,144:INFO:Initializing predict_model()
2024-05-12 13:17:06,145:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d85b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c1bd0>)
2024-05-12 13:17:06,145:INFO:Checking exceptions
2024-05-12 13:17:06,145:INFO:Preloading libraries
2024-05-12 13:17:06,146:INFO:Set up data.
2024-05-12 13:17:06,150:INFO:Set up index.
2024-05-12 13:17:13,563:INFO:Initializing predict_model()
2024-05-12 13:17:13,563:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2950>)
2024-05-12 13:17:13,563:INFO:Checking exceptions
2024-05-12 13:17:13,563:INFO:Preloading libraries
2024-05-12 13:17:13,564:INFO:Set up data.
2024-05-12 13:17:13,569:INFO:Set up index.
2024-05-12 13:17:24,273:INFO:Initializing predict_model()
2024-05-12 13:17:24,274:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d85b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c17e0>)
2024-05-12 13:17:24,274:INFO:Checking exceptions
2024-05-12 13:17:24,274:INFO:Preloading libraries
2024-05-12 13:17:24,275:INFO:Set up data.
2024-05-12 13:17:24,280:INFO:Set up index.
2024-05-12 13:32:55,762:INFO:Initializing predict_model()
2024-05-12 13:32:55,763:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x15f6d8340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'sex', 'cp', 'trestbps',
                                             'chol', 'fbs', 'restecg',
                                             'thalach', 'exang', 'oldpeak',
                                             'slope', 'ca', 'thal'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 ExtraTreesClassifier(n_jobs=-1, random_state=3548))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f6c2950>)
2024-05-12 13:32:55,763:INFO:Checking exceptions
2024-05-12 13:32:55,763:INFO:Preloading libraries
2024-05-12 13:32:55,764:INFO:Set up data.
2024-05-12 13:32:55,767:INFO:Set up index.
